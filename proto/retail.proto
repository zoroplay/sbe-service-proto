syntax = "proto3";

package retail;

service RetailService {

    // Bonus Groups
    rpc getBonusGroups(Empty) returns (BonusGroupResponse) {}
    rpc createBonusGroups(BonusGroups) returns (BonusGroupResponse) {}

    // Profiles
    rpc getCommissionProfiles(Empty) returns (CommissionProfilesResponse) {}
    rpc createCommissionProfile(CommissionProfile) returns (CommissionProfileResponse) {}
    rpc updateCommissionProfile(CommissionProfile) returns (CommissionProfileResponse) {}
    rpc assignUserCommissionProfile(AssignUserCommissionProfile) returns (CommissionProfileResponse) {}
    
    //rpc getAllCommissions(ProfileId) returns (CommissionResponse) {}
    // rpc getCommissionsReport(CommissionReportRequest) returns (CommissionReportResponse) {}
    
    rpc getPowerBonus(PowerRequest) returns (PowerBonusResponse) {}
    rpc payOutPowerBonus(PayPowerRequest) returns (PowerResponse) {}

    rpc getNormalBonus(GetNormalRequest) returns (NormalResponse) {}
    rpc calculateNormalBonus(PayNormalRequest) returns (PayNormalResponse) {}
    rpc payOutNormalBonus(PayNormalRequest) returns (PayNormalResponse) {}
}

message Empty {

}
// Bonus
message BonusGroup {
    string group = 1;
    int32 maxSel = 2;
    int32 minSel = 3;
    int32 rate = 4;
    int32 rateIsLess = 5;
    int32 rateIsMore = 6;
    int32 targetCoupon = 7;
    int32 targetStake = 8;
    optional string createdAt = 9;
    optional string updatedAt = 10;
}

message BonusGroups {
    repeated BonusGroup bonusGroups = 1;
}

message BonusGroupResponse {
    bool success = 1;
    string message = 2;
    repeated BonusGroup  data = 3;
}

// Commission Profile
message CommissionProfile {
    optional int32 id = 1;
    string name = 2;
    bool default = 3;
    string description = 4;
    string providerGroup = 5;
    string period = 6;
    string type = 7;
    double percentage = 8;
    int32 commissionType = 9;
    repeated CommissionTurnover turnovers = 10;
    optional string createdAt = 11;
    optional string updatedAt = 12;
}

message CommissionProfileResponse {
    bool success = 1;
    string message = 2;
    CommissionProfile  data = 3;
}

message CommissionProfilesResponse {
    bool success = 1;
    string message = 2;
    repeated CommissionProfile  data = 3;
}

message AssignUserCommissionProfile {
    int32 profileId = 1;
    int32 userId = 2;
    optional string createdAt = 3;
    optional string updatedAt = 4;
}

// Commissions


// Power Bonus
message PowerRequest {
    string fromDate = 1;
    string toDate = 2;
}

message BetData {
    optional int32 id = 1;
    string date = 2;
    int32 settledBet = 3;
    int32 selectionCount = 4;
    int32 totalStake = 5;
    double totalCommission = 6;
    double totalWinnings = 7;
    double weightedStake = 8;
    optional string createdAt = 9;
    optional string updatedAt = 10;
}

message PowerBonusData {
    optional int32 id = 1;
    double totalStake = 2;
    int32 totalTickets = 3;
    double totalWeightedStake = 4;
    double averageNoOfSelections = 5;
    double grossProfit = 6;
    double ggrPercent = 7;
    double rateIsLess = 8;
    double rateIsMore = 9;
    double rate = 10;
    double turnoverCommission = 11;
    double monthlyBonus = 12;
    double totalWinnings = 13;
    repeated BetData bets = 14;
    optional string createdAt = 15;
    optional string updatedAt = 16;

}

message PayPowerRequest {
    repeated int32 agentIds = 1;
    string fromDate = 2;
    string toDate = 3;
    string provider = 4;
}
message PowerCountData {
    repeated string paidUsers = 1;
    repeated string unPaidUsers = 2;
    repeated string errors = 3;
}
message PowerResponse {
    bool success = 1;
    string message = 2;
    PowerCountData data = 3;
}

message PowerBonusResponse {
    bool success = 1;
    string message = 2;
    PowerBonusData data = 3;
}

// Normal Bonus
message GetNormalRequest {
    string fromDate = 1;
    string toDate = 2;
    string provider = 3;
    optional Meta meta = 4;
}

message PayNormalRequest {
    optional int32 id = 1;
    int32 betId = 2;
    int32 selectionsCount = 3;
    double totalOdds = 4;
    double stake = 5;
    int32 clientId = 6;
    int32 cashierId = 7;
    optional int32 profileId = 8;
    optional double commission = 9;
    string profileGroup = 10;
    bool isPaid = 11;
}

message CurrentWeekData {
    int32 totalWeeks = 1;
    int32 current_week= 2;
    int32 no_of_tickets = 3;
    int32 played = 4;
    int32 won = 5;
    int32 net = 6;
    int32 commission = 7;
}
message CurrentMonth {
    string month = 1;
}

message Meta {
    optional int32 total = 1;
    optional int32 totalPages = 2;
    int32 currentPage = 3;
    int32 itemsPerPage = 4;
}

message NormalResponse {
    bool success = 1;
    string message = 2;
    repeated NormalPayout data = 3;
    Meta meta = 4;
}

message PayNormalResponse {
    bool success = 1;
    string message = 2;
    double data = 3;
}

message NormalPayout {
    optional int32 id = 1;
    int32 betId = 2;
    int32 selectionsCount = 3;
    double totalOdds = 4;
    double stake = 5;
    int32 cashierId = 6;
    int32 profileId = 7;
    string profileGroup = 8;
    double commission = 9;
    bool isPaid = 10;
    optional string createdAt = 11;
    optional string updatedAt = 12;
}


// Commission Reequest
message CommissionRequest {
    string provider = 1;
}

message ArrayCommissionResponse {
    repeated Commission commissions = 1;
}

message Commission {
    optional int32 id = 1;
    string userId = 2;
    string totalTickets = 3;
    string totalSales = 4;
    string totalWon = 5;
    string net = 6;
    string commission = 7;
    string startDate = 8;
    string endDate = 9;
    bool isPaid = 10;
    int32 userCommissionProfileId = 11;
    optional string createdAt = 12;
    optional string updatedAt = 13;
}

message CommissionTurnover {
    optional int32 id = 1;
    int32 event = 2;
    optional CommissionProfile commissionProfile = 3;
    double percentage = 4;
    double maxOdd = 5;
    double minOdd = 6;
    bool oddSet = 7;
    optional string createdAt = 8;
    optional string updatedAt = 9;
}