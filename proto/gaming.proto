syntax = "proto3";
import "google/protobuf/any.proto";
package gaming;

service GamingService {
    rpc CreateGame (CreateGameDto) returns (Game) {}
    rpc FindAllGames (Empty) returns (Games) {}
    rpc SyncGames (SyncGameDto) returns (Games) {}
    rpc FindOneGame (FindOneGameDto) returns (Game) {}
    rpc UpdateGame (UpdateGameDto) returns (Game) {}
    rpc RemoveGame (UpdateGameDto) returns (Game) {}

    rpc CreateProvider (CreateProviderDto) returns (Provider) {}
    rpc UpdateProvider (CreateProviderDto) returns (Provider) {}
    rpc FindOneProvider (FindOneGameDto) returns (Provider) {}
    rpc RemoveProvider  (CreateProviderDto) returns (Provider) {}
    rpc FindAllProviders (Empty) returns (Providers) {}

    rpc StartGame (StartGameDto) returns (StartGameResponse) {}
    rpc QueryGames (stream PaginationDto) returns (stream Games) {}
    rpc HandleSmartSoftCallback (SmartSoftCallback) returns (SmartSoftCallback) {}
    rpc HandleTadaCallback (TadaCallback) returns (TadaCallback) {}
    rpc HandleShackEvolutionCallback (ShackEvolutionCallback) returns (ShackEvolutionCallback) {}
    rpc HandleEvoplayCallback(EvoplayCallback) returns (EvoplayCallback) {}
    rpc HandleEvolutionCallback(EvolutionCallback) returns (EvolutionCallback) {}
}

message PaginationDto {
    int32 page = 1;
    int32 skip = 2;
};

message Empty {};

message SyncGameDto {
    string provider = 1;
};

message CallbackGameDto {
    string provider = 1;
    google.protobuf.Any header = 2;
    google.protobuf.Any body = 3;
};

message FindOneGameDto {
    int32 id = 1;
};

message Games {
    repeated Game games = 1;
};

message Providers {
    repeated Provider providers = 1;
};

message UpdateGameDto {
    int32 id = 1;
    string gameId = 2;
    string title = 3;
    string description = 4;
    string url = 5;
    string image_path = 6;
    string banner_path = 7;
    bool status = 8;
    string type = 9;
    int32 providerId = 10;
}
message CreateProviderDto {
    optional int32 id = 1;
    string slug = 2;
    string name = 3;
    string description = 4;
    string imagePath = 5;
}

message CreateGameDto {
    string gameId = 1;
    string title = 2;
    string description = 3;
    string url = 4;
    string image_path = 5;
    string banner_path = 6;
    bool status = 7;
    string type = 8;
    int32 providerId = 9;
}

message StartGameDto {
    string gameId = 1;
    string clientId = 2;
    string userId = 3;
    string providerSlug = 4;
    optional string demo = 5;
};

message StartGameResponse {
    string url = 1;
}

message Game {
    int32 id = 1;
    string gameId = 2;
    string title = 3;
    string description = 4;
    string url = 5;
    string imagePath = 6;
    string bannerPath = 7;
    bool status = 8;
    string type = 9;
    Provider provider = 10;
    string createdAt = 11;
    string updatedAt = 12;
}

message Provider {
    int32 id = 1;
    string slug = 2;
    string name = 3;
    string description = 4;
    string imagePath = 5;
    optional Games games = 6;
    optional string parentProvider = 7;
    string createdAt = 8;
    string updatedAt = 9;
}


// Smart Soft TransactionInfo
message SmartSoftTransactionInfo {
    string Source = 1;
    optional string GiftKey = 2;
    string RoundId = 3;
    string GameName = 4;
    optional string Jackpots = 5;
    optional string JetXBets = 6;
    optional double TotalWon = 7;
    string RoundDate = 8;
    int32 RoundLong = 9;
    string GameNumber = 10;
    optional double GiftAmount = 11;
    optional double RakeAmount = 12;
    optional string RakeFromBet = 13;
    optional string RakePercent = 14;
    optional string GiftQuantity = 15;
    optional string TournamentId = 16;
    optional string RoundingDelta = 17;
    optional double RakeBackAmount = 18;
    optional string TotalPlacedBet = 19;
    optional string TournamentType = 20;
    string TransactionKey = 21;
    optional string JetXCoefficient = 22;
    string TransactionDate = 23;
    optional string BetTransactionId = 24;
    optional string TournamentNumber = 25;
    optional string JetX3Coefficients = 26;
    string OriginalSessionId = 27;
    optional string TournamentGameType = 28;
    optional string IsTournamentSpecial = 29;
    int32 CashierTransacitonId = 30;
    optional int32 TournamentPlayerRank = 31;
    optional double TournamentEnterAmount = 32;
    optional int32 JetXCashoutCoefficients = 33;
    optional string TournamentRegistrationTyp = 34;
}

// SmartSoftCallback
message SmartSoftCallback {
    double Amount = 1;
    string CurrencyCode = 2;
    string TransactionId = 3;
    SmartSoftTransactionInfo TransactionInfo = 4;
    string TransactionType = 5;
}


// Tada Games Callback
message TadaCallback {
    string id = 1;
    int32 game = 2;
    string reqId = 3;
    int32 round = 4;
    string token = 5;
    string currency = 6;
    double betAmount = 7;
    int32 wagersTime = 8;
    double winloseAmount = 9;
}

// Shack Evolution Callback
message ShackEvolutionCallback {
    string type = 1;
    double amount = 2;
    string freebet = 3;
    string roundId = 4;
    string gameType = 5;
    string playerId = 6;
    string signature = 7;
    optional string gameOutcome = 8;
    bool gameRoundEnded = 9;
}

// Evoplay Data 
message EvoplayData {
    optional string id= 1;
    optional string user_id= 2;
    optional string round_id= 3;
    optional string action_id= 4;
    optional string refund_round_id= 5;
    optional string refund_action_id= 6;
    optional string refund_callback_id= 7;
    optional string final_action= 8;
    optional string type= 9;
    optional string event_id= 10;
    string currency= 11;
    string amount= 12;
    optional string details = 13;
    optional string user_message= 14;
    optional string wallet_type= 15;
}

// Evoplay Callback
message EvoplayCallback {
    string token = 1;
    string callback_id = 2;
    string name = 3;
    optional EvoplayData data = 4;
    string signature = 5;
}

//EVOLUTION CALLBACK
message EvolutionCallback {
    int32 operatorId = 1;
    optional string uid = 2;
    optional string transactionId = 3;
    optional int32 gameId = 4;
    string token = 5;
    optional double debitAmount = 6;
    optional int32 betTypeID = 7;
    optional int32 serverId = 8;
    optional int32 roundId = 9;
    optional string currency = 10;
    optional string seatId = 11;
    int32 platformId = 12;
    optional int32 tableId = 13;
    int32 timestamp = 14;
}