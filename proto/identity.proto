syntax = "proto3";

package identity;

service IdentityService {
  rpc Register (CreateUserRequest) returns (RegisterResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc Validate (ValidateRequest) returns (ValidateResponse) {}
  rpc ValidateClient (ValidateRequest) returns (ValidateClientResponse) {}
  rpc GetUserDetails (GetUserDetailsRequest) returns (GetUserDetailsResponse) {}
  rpc CreateClient (ClientRequest) returns (CommonResponse) {}
  rpc CreatePermission (PermissionRequest) returns (CommonResponse) {}
  rpc SaveRole (RoleRequest) returns (SaveRoleResponse) {}
  rpc GetRoles (EmptyRequest) returns (GetRolesResponse) {}
  rpc RemoveRole (RemoveRoleRequest) returns (DeleteResponse) {}
  rpc FindAllPermissions (EmptyRequest) returns (CommonResponse) {}
  rpc FindAllClients (EmptyRequest) returns (CommonResponse) {}
  rpc RemoveClient (RemoveClientRequest) returns (CommonResponse) {}
  rpc RemovePermission (RemovePermissionRequest) returns (CommonResponse) {}
  rpc UpdateDetails (User) returns (CommonResponse) {}
  rpc CreateRetailUser (CreateUserRequest) returns (CommonResponse) {}
  rpc CreateAdminUser (CreateUserRequest) returns (CommonResponse) {}
  rpc GetAdminUsers (EmptyRequest) returns (GetUsersResponse) {}
  rpc GetClient (GetClientRequest) returns (GetClientResponse) {}
  rpc GetPaymentData (GetPaymentDataRequest) returns (GetPaymentDataResponse) {}
  rpc SearchPlayers (SearchPlayerRequest) returns (SearchPlayerResponse) {}
  rpc UpdateUserDetails (UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc GetUserByUsername (GetUserByUsernameRequest) returns (GetUserByUsernameResponse) {}
  rpc OnlinePlayersReport (OnlinePlayersRequest) returns (PlayersListResponse) {}
  rpc RegistrationReport (RegistrationReportRequest) returns (PlayersListResponse) {}
  rpc GetPlayerData (GetPlayerDataRequest) returns (GetPlayerDataResponse) {}
}
// user
message UserData {
  int32 id = 1;
  string username = 2;
  float balance = 3;
  optional string code = 4;
  string firstName = 5;
  optional string lastName = 6;
  optional string email = 7;
  optional string phone = 8;
  optional string role = 9;
  optional int32 roleId = 10;
  optional float availableBalance = 12;
  optional float sportBonusBalance = 13;
  optional float casinoBonusBalance = 14;
  optional float virtualBonusBalance = 15;
  optional float trustBalance = 16;
  string token = 17;
  string registered = 18;
  string authCode = 19;
  string country = 20;
  string currency = 21;
  string city = 22;
  string address = 23;
  string gender = 24;
  string dateOfBirth = 25;
}

message CreateUserRequest {
  int32 clientId = 1;
  string username = 2;
  string password = 3;
  optional string email = 4;
  optional int32 roleId = 5;
  optional string firstName = 6;
  optional string lastName = 7;
  optional string phoneNumber = 8;
  optional string gender = 9;
  optional string dateOfBirth = 10;
  optional string country = 11;
  optional string state = 12;
  optional string city = 13;
  optional string address = 14;
  optional string language = 15;
  optional string currency = 16;
  optional int32 parent = 17;
  optional string promoCode = 18;
  optional string trackingToken = 19;
}

message UpdateUserRequest {
  int32 clientId = 1;
  int32 userId = 2;
  string username = 3;
  string password = 4;
  optional string email = 5;
  optional int32 roleId = 6;
  optional string firstName = 7;
  optional string lastName = 8;
  optional string phoneNumber = 9;
  optional string gender = 10;
  optional string dateOfBirth = 11;
  optional string country = 12;
  optional string state = 13;
  optional string city = 14;
  optional string address = 15;
  optional string language = 16;
  optional string currency = 17;
  optional int32 parent = 18;
  optional string promoCode = 19;
  optional string trackingToken = 20;
}

// user
message User {
  string userID = 1;
  string firstName =2 ;
  string lastName =3 ;
  string email= 4;
  string city =5;
  string country= 6;
  string gender= 7;
  string currency = 8;
  string phone =9;
  string roleId =10;
}

message RegisterResponse {
  int32 status = 1;
  bool success = 2;
  UserData data = 3;
  optional string error = 4;
}
// Login
message LoginRequest {
  int32 clientId = 1;
  string username = 2;
  string password = 3;
}

message LoginResponse {
  int32 status = 1;
  bool success = 2;
  UserData data = 3;
  optional string error = 4;
}

message GetUserDetailsRequest {
  int32 clientId = 1;
  int32 userId = 2;
}

message GetUserDetailsResponse {
  int32 status = 1;
  bool success = 2;
  string message = 3;
  UserData data = 4;
}



message UpdateUserResponse {
  bool success = 1;
  string message = 2;
}

// Validate
message ValidateRequest {
  string token = 1;
}

message ValidateResponse {
  int32 status = 1;
  string error = 2;
  message User {
    int32 id = 1;
    string username = 2;
  }
  optional User user = 3;
}

message ValidateClientResponse {
  int32 status = 1;
  string error = 2;
  int32 clientId = 3;
}

message ClientRequest {
  string name = 1;
  string country = 2;
  string currency = 3;
  string apiUrl = 4;
  string webUrl = 5;
  string mobileUrl = 6;
  string shopUrl = 7;
  string contactNumber = 8;
  string contactEmail = 9;
  string clientID = 10;
}

message RemoveClientRequest {
  string clientID = 1;
}

message RemovePermissionRequest {
  string permissionID = 1;
}

message RoleRequest {
  string name = 1;
  optional string description = 2;
  string roleType = 3;
  optional string roleID = 4;
}

message SaveRoleResponse {
  bool status = 1;
  string message = 2;
  Role data = 3;
  optional string errors = 4;
}

message GetRolesResponse {
  bool status = 1;
  string message = 2;
  repeated Role data = 3;
  optional string errors = 4;
}

message RemoveRoleRequest {
  string roleID = 1;
}

message Role {
  int32 id = 1;
  string name = 2;
  string description = 3;
  string roleType = 4;
}

message PermissionRequest {
  string name = 1;
  string description = 2;
  string permissionID = 3;
}

message GetPaymentDataRequest {
  int32 clientId = 1;
  int32 userId = 2;
  string source = 3;
}

message GetPaymentDataResponse {
  string username = 1;
  string email = 2;
  string callbackUrl = 3;
}

message GetClientRequest {
  int32 id = 1;
}

message GetClientResponse {
  bool status = 1;
  string message = 2;
  ClientData data = 3;
  optional string errors = 4;
}

message CommonResponse {
  bool status = 1;
  string message = 2;
  repeated string data = 3;
  optional string errors = 4;
}

message DeleteResponse {
  bool status = 1;
  string message = 2;
}

message GetUsersResponse {
  bool status = 1;
  string message = 2;
}

message ClientData {
  string name = 1;
  string country = 2;
  string currency = 3;
  string website = 4;
  string contactNumber = 5;
  string contactEmail = 6;
}

message SearchPlayerRequest {
  int32 clientId = 1;
  string searchKey = 2;
}

message SearchPlayerResponse {
  bool success = 1;
  string message = 2;
  repeated Player data = 3;
}

message Player {
  int32 id = 1;
  string code = 2;
  string username = 3;
  string email = 4;
  string firstName = 5;
  string lastName = 19;
  string phoneNumber = 6;
  string registered = 7;
  string country = 8;
  string currency = 9;
  int32 status = 10;
  int32 verified = 11;
  float balance = 12;
  float bonus = 13;
  float lifeTimeDeposit = 14;
  float lifeTimeWithdrawal = 15;
  int32 openBets = 16;
  string role = 17;
  string lastLogin = 18;
}

message GetUserByUsernameRequest {
  int32 clientId = 1;
  string username = 2;
}

message GetUserByUsernameResponse {
  string responseCode = 1;
  string responseMessage = 2;
  message Data {
    optional string referenceID = 1;
    optional string CustomerName = 2;
    optional string Phoneno = 3;
    optional string Status = 4;
  }
  Data data = 3;
}

message OnlinePlayersRequest {
  int32 clientId = 1;
  string username = 2;
  string country = 3;
  string state = 4;
  string source = 5;
  optional int32 page = 6;
  optional int32 limit = 7;
}

message RegistrationReportRequest {
  int32 clientId = 1;
  string from = 2;
  string to = 3;
  string source = 4;
  optional int32 page = 5;
  optional int32 limit = 6;
}

message PlayersListResponse {
  int32 from = 1;
  int32 to = 2;
  int32 total = 3;
  int32 currentPage = 4;
  int32 perPage = 5;
  repeated Player data = 6;
}

message GetPlayerDataRequest {
  int32 clientId = 1;
  int32 userId = 2;
}

message GetPlayerDataResponse {
  bool success = 1;
  string message = 2;
  message PlayerData {
    Player user = 1;
    PlayerWalletData wallet = 2;
    PlayerBonusData bonus = 3;
  }
  optional PlayerData data = 3;
}

message PlayerWalletData {
  int32 deposits = 1;
  int32 totalDeposits = 2;
  int32 withdrawals = 3;
  int32 totalWithdrawals = 4;
  int32 pendingWithdrawals = 5;
  int32 avgWithdrawals = 6;
  message LastDepositWithdrawal {
    string data = 1;
    float amount = 2;
  }
  LastDepositWithdrawal lasitDeposit = 7;
  LastDepositWithdrawal lastWithdrawal = 8;
}

message PlayerBonusData {
  
}

message EmptyRequest {}