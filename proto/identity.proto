syntax = "proto3";

package identity;

service IdentityService {
  rpc Register (CreateUserRequest) returns (RegisterResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc Validate (ValidateRequest) returns (ValidateResponse) {}
  rpc CreateClient (ClientRequest) returns (CommonResponse) {}
  rpc CreatePermission (PermissionRequest) returns (CommonResponse) {}
  rpc CreateRole (RoleRequest) returns (CommonResponse) {}
  rpc FindAllPermissions (EmptyRequest) returns (CommonResponse) {}
  rpc FindAllClients (EmptyRequest) returns (CommonResponse) {}
  rpc FindAllRoles (EmptyRequest) returns (CommonResponse) {}
  rpc RemoveClient (RemoveClientRequest) returns (CommonResponse) {}
  rpc RemoveRole (RemoveRoleRequest) returns (CommonResponse) {}
  rpc RemovePermission (RemovePermissionRequest) returns (CommonResponse) {}
  rpc UpdateDetails (User) returns (CommonResponse) {}
  rpc CreateRetailUser (CreateUserRequest) returns (CommonResponse) {}
  rpc CreateAdminUser (CreateUserRequest) returns (CommonResponse) {}
}
// user
message UserData {
  int32 id = 1;
  string username = 2;
  optional string balance = 3;
  optional string code = 4;
  optional string firstName = 5;
  optional string lastName = 6;
}

message CreateUserRequest {
  int32 clientId = 1;
  string username = 2;
  string password = 3;
  optional string email = 4;
  optional int32 roleId = 5;
  optional string firstName = 6;
  optional string lastName = 7;
  optional string phoneNumber = 8;
  optional string gender = 9;
  optional string dateOfBirth = 10;
  optional string country = 11;
  optional string state = 12;
  optional string city = 13;
  optional string address = 14;
  optional string language = 15;
  optional string currency = 16;
  optional int32 parent = 17;
}

// user
message User {
  string userID = 1;
  string firstName =2 ;
  string lastName =3 ;
  string email= 4;
  string city =5;
  string country= 6;
  string gender= 7;
  string currency = 8;
  string phone =9;
  string  roleId =10;
}

message RegisterResponse {
  int32 status = 1;
  UserData data = 2;
  optional string error = 3;
}

// Login
message LoginRequest {
  int32 clientId = 1;
  string username = 2;
  string password = 3;
}

message LoginResponse {
  int32 status = 1;
  string token = 2;
  UserData data = 3;
  optional string error = 4;
}

// Validate
message ValidateRequest {
  string token = 1;
}

message ValidateResponse {
  int32 status = 1;
  string error = 2;
  int32 userId = 3;
}

message ClientRequest {
  string name = 1;
  string country = 2;
  string currency = 3;
  string website = 4;
  string contactNumber = 5;
  string contactEmail = 6;
  string clientID = 7;
}

message RemoveClientRequest {
  string clientID = 1;
}

message RemoveRoleRequest {
  string roleID = 1;
}

message RemovePermissionRequest {
  string permissionID = 1;
}

message RoleRequest {
  string name = 1;
  string description = 2;
  string roleType = 3;
  optional string roleID = 4;
}

message PermissionRequest {
  string name = 1;
  string description = 2;
  string permissionID = 3;
}

message CommonResponse {
  bool status = 1;
  string message = 2;
  repeated string data = 3;
  optional string errors = 4;
}

message EmptyRequest {}